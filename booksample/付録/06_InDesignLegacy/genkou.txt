■将来的な問題：InDesignレガシー本書の主旨はJavaScriptを使ってInDesignを制御し、より効率よく業務が行えるようにするというものです。最初の方にも書いてありますが、スクリプトによる制御を行う前に既存の市販されているソフトウェア／プラグインを利用できるのであれば、先にそれらの利用を検討すべきです。というのも、JavaScriptによるInDesignの制御は非常に強力な面もありますが、欠点もあるためです。では、どのような問題があるのでしょうか上げてみましょう。・他人が書いたスクリプトが理解できない（動作するが意味不明、理解不能なコード）・スクリプトの制作者がいなくなってしまった・スクリプトがどのファイルに依存しているのか分からない・仕様書がない幸い本書で解説しているJavaScriptに関してはWeb上で多く利用されていることもあり、プログラムを理解することができる人口は多いと言えるでしょう。しかし、印刷業務（実務）は、これとは別の話です。プログラムも書けて実務もこなせるという人口は多くありません。このため、制作者が退職してしまったりすると以後のスクリプトのメンテナンスができなくなってしまいます。基本的に上記に上げた問題は人的なものです。解決する方法はいくつかあります。それが最初にも書いたように、なるべく市販されているものを利用する（それも多くの会社が利用しているもの）という方法です。しかし、これでは横一線になり競争力が落ちてしまうこともあります。別の方法としては社内でプログラムを作成できる人を増やすことです。そして、なるべく若い世代に継承していくことが重要です。特に作成したスクリプト（プログラム）は制作者の想像をはるかに超えて長期間使用されてしまうことがあります。2〜3年で新しいプログラムに書き換える予定だったものが、結果的に10年以上使われてしまうこともあります。過去にあった2000年問題も、その1つです。他の方法もあります。スクリプトを利用してワークフローを確立したらプログラムの制作に関しては外注してしまうというものです。社内には仕様書が残りますので、これを元にしてさらに強力なワークフローに変更していくことができます。どれを選択しても万能ではありません。まずは、現在の業務をスクリプトなどを使って効率よく処理し時間などのリソースを増やすことです。余裕ができれば、いろいろな解決方法を選択することができるようになるはずです。