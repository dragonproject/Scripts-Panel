var extType = "*";	// 全てのファイルを対象にするvar fList = "";	// ファイルリスト（グローバル変数）var indent = 0;(function(){	var aTop = "20mm";	var aRight = "180mm";	var aBottom = "280mm";	var aLeft = "20mm";	if (app.documents.length < 1) {		alert("あらかじめドキュメントを開いてから実行してください");		return;	}	var folderObj = Folder.selectDialog("フォルダを選択してください");	if (!folderObj) return;	// キャンセルボタンが押された時は処理しない	var pageNo = parseInt(prompt("割り付ける開始ページを指定してください",1)) - 1;	if ((pageNo < 0) || (pageNo > app.activeDocument.pages.length-1)){		alert("割り付けるページは存在しません");		return;	}	var fileList = folderObj.getFiles(extType);	if (fileList.length < 1) {		alert("ファイルがありません");		return;	}	var pageObj = app.activeDocument.pages[pageNo];	getFileList(fileList);	var tfObj = pageObj.textFrames.add();	tfObj.visibleBounds = [aTop, aRight, aBottom, aLeft];	tfObj.contents = fList;})();// ファイル一覧を返す処理function getFileList(fileList){	var dakuten = "%E3%82%99";	// ★Mac版InDesign CS2用 (WindowsやCS3では不要)	var handakuten = "%E3%82%9A";	// ★Mac版InDesign CS2用 (WindowsやCS3では不要)	var CR = String.fromCharCode(13);	for (var i=0; i<fileList.length; i++){		var filename = fileList[i].name;		if (filename.charAt(0) == ".") continue;		filename = convertKana(filename,dakuten,1);	// ★Mac版InDesign CS2用 (WindowsやCS3では不要)		filename = convertKana(filename,handakuten,2);	// ★Mac版InDesign CS2用 (WindowsやCS3では不要)		filename = File.decode(filename);	// ★Mac版InDesign CS2用 (WindowsやCS3では不要)		for (var j=0; j<indent; j++){			if (j == indent-1){				fList = fList + "├";	// 罫線			}else{				fList = fList + "　";	// タブでなく全角空白でインデント			}		}		if (fileList[i].getFiles) {			fList = fList + "■"+filename+CR;	// フォルダの場合はフォルダ名の前に■を付ける			indent = indent + 1;			getFileList(fileList[i].getFiles(extType));		}else{			fList = fList + filename + CR;		}	}	indent = indent - 1;}// MacOS X+InDesign CS2の組み合わせで日本語が含まれた場合の不具合を解消する処理function convertKana(srcName, code, count){	srcName = srcName.replace(/%E3%82%BF%E3%82%99/g, "%E3%83%80"); // ダだけ特殊処理	var text = srcName.split(code); // 濁点	for (var i=0; i<text.length-1; i++){		var str = text[i];		if (str == "") continue;		var body = str.substring(0,str.length-2);		var footL = str.substring(str.length-2, str.length);		var hexL = eval("0x"+footL) + count;		hexL = hexL.toString(16).toUpperCase();		text[i] = body+hexL;	}	return text.join("");}
